<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="turtlebot3_burger">

  <link name="base_link">

  </link>
  <!-- body link (chassis)-->
  <link name="body_link">
    <inertial>
      <origin xyz="-0.032 0 0.070" rpy="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.001" ixy="0.000" ixz="0.000"
               iyy="0.001" iyz="0.000" izz="0.001"/>
    </inertial>
    <collision name="body_collision">
      <origin xyz="-0.032 0 0.070" rpy="0 0 0"/>
      <geometry>
        <box size="0.140 0.140 0.140"/>
      </geometry>
    </collision>
    <visual name="body_visual">
      <origin xyz="-0.032 0 0.070" rpy="0 0 0"/>
      <geometry>
        <box size="0.140 0.140 0.140"/>
      </geometry>
    </visual>
  </link>
  <!-- BASE_FOOTPRINT LINK -->

  <joint name="base_footprint_joint" type="fixed">
      <parent link="base_link"/>
      <child link="base_footprint"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <link name="base_footprint">
  </link>
  <!-- Lidar link -->
  <link name="lidar">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001" ixy="0.000" ixz="0.000"
               iyy="0.001" iyz="0.000" izz="0.001"/>
    </inertial>
    <collision name="lidar_sensor_collision">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </collision>
    <visual name="lidar_sensor_visual">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </visual>
  </link>

  <!--lidar-->
<gazebo reference="lidar">
  <!-- <sensor name="lidar" type="ray">
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>5</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1.000000</resolution>
          <min_angle>0.000000</min_angle>
          <max_angle>6.280000</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.060000</min>
        <max>3.5</max>
        <resolution>0.015000</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <remapping>~/out:=scan</remapping>
      </ros>
      <output_type>sensor_msgs/LaserScan</output_type>
      <frame_name>lidar</frame_name>
    </plugin>
  </sensor> -->
  <sensor name="laser" type="ray">
    <visualize>false</visualize>
    <pose> 0 0 0 0 0 0 </pose>
    <visualize>false</visualize>
    <update_rate>10</update_rate>
    <ray>
        <scan>
            <horizontal>
                <samples>360</samples>
                <min_angle>-3.14</min_angle>
                <max_angle>3.14</max_angle>
            </horizontal>
        </scan>
        <range>
            <min>0.15</min>
            <max>12</max>
        </range>
    </ray>
    <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
            <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar</frame_name>
    </plugin>
</sensor>
</gazebo>
<!-- 
  <gazebo reference = "lidar">
    <sensor name="hls_lfcd_lds" type="ray">
    <origin xyz="-0.032 0 0.171" rpy="0 0 0"/>
    <update_rate>1800</update_rate>
    <visualize>0</visualize>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1.000000</resolution>
          <min_angle>0.000000</min_angle>
          <max_angle>6.280000</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.120000</min>
        <max>3.5</max>
        <resolution>0.015000</resolution>
      </range>
      <noise type="gaussian">
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_laser">
        <topicName>/scan</topicName>
      </plugin>
    </sensor>
  </gazebo> -->

  <!-- cammera -->
<link name="camera_link">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.015 0.110 0.022"/>
    </geometry>
  </visual>

  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.015 0.110 0.022"/>
    </geometry>
  </collision>

  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.035"/>
    <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
  </inertial>
</link>

<joint name="camera_joint" type="fixed">
  <parent link="body_link"/>
  <child link="camera_link"/>
  <origin xyz="0.05 0 0.05" rpy="0 0 0"/>
</joint>

<link name="camera_depth_frame"/>

<joint name="camera_depth_joint" type="fixed">
  <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  <parent link="camera_link"/>
  <child link="camera_depth_frame"/>
</joint>

<gazebo reference="camera_link">
  <sensor name="depth_camera" type="depth">
    <visualize>true</visualize>
    <update_rate>30.0</update_rate>
    <camera name="camera">
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <frame_name>camera_depth_frame</frame_name>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0</distortionK1>
      <distortionK2>0</distortionK2>
      <distortionK3>0</distortionK3>
      <distortionT1>0</distortionT1>
      <distortionT2>0</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>

  <!-- caster link -->
  <link name="caster_wheel">
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.005"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.005"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="1e-5" ixy="0.0" ixz="0.0"
               iyy="1e-5" iyz="0.0" izz="1e-5"/>
    </inertial>
  </link>

  <!-- Left wheel link -->
  <link name="left_wheel">
    <inertial>
    
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.000" ixz="0.000"
               iyy="0.001" iyz="0.000" izz="0.001"/>
    </inertial>
    <collision name="left_wheel_collision">

      <geometry>
        <cylinder radius="0.033" length="0.018"/>
      </geometry>
    </collision>
    <visual name="left_wheel_visual">
      
      <geometry>
        <cylinder radius="0.033" length="0.018"/>
      </geometry>
    </visual>
  </link>

  <!-- Right wheel link -->
  <link name="right_wheel">
    <inertial>
      
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.000" ixz="0.000"
               iyy="0.001" iyz="0.000" izz="0.001"/>
    </inertial>
    <collision name="right_wheel_collision">
      
      <geometry>
        <cylinder radius="0.033" length="0.018"/>
      </geometry>
    </collision>
    <visual name="right_wheel_visual">
      
      <geometry>
        <cylinder radius="0.033" length="0.018"/>
      </geometry>
    </visual>
  </link>

  <!--caster wheel joint-->
  <joint name="caster_wheel_joint" type="fixed">
    <parent link="body_link"/>
    <child link="caster_wheel"/>
    <origin xyz="-0.08 0.0 -0.005" rpy="0 0 0"/>
  </joint>

  <!-- Left wheel joint -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="body_link"/>
    <child link="left_wheel"/>
    <origin xyz="0 0.08 0.023" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- Right wheel joint -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="body_link"/>
    <child link="right_wheel"/>
    <origin xyz="0.0 -0.08 0.023" rpy="1.57 0 0"/>
    <axis xyz="0 0 -1"/>
  </joint>

  <!-- Lidar joint -->
  <joint name="lidar_joint" type="fixed">
    <parent link="body_link"/>
    <child link="lidar"/>
    <origin xyz="0.0 0 0.171" rpy="0 0 0"/>
  </joint>
  <!-- base joint -->
  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="body_link"/>
    <origin xyz="0.1 0.0 0.0" rpy="0 0 0"/>
  </joint>
     <!-- Adding transmission to wheels -->
  <transmission name="right_wheel_joint">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="left_wheel_joint">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
<!-- Plugin controller -->
<!-- <gazebo>
  <plugin name="differential_drive_controller1" filename="libgazebo_ros_diff_drive.so">
    <legacyMode>false</legacyMode>
    <alwaysOn>true</alwaysOn>
    <updateRate>10</updateRate>
    <leftJoint>left_wheel_joint</leftJoint>
    <rightJoint>right_wheel_joint</rightJoint>
    <wheelSeparation>0.142</wheelSeparation>
    <wheelDiameter>0.066</wheelDiameter>
    <torque>30</torque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base</robotBaseFrame>
  </plugin>
  
</gazebo> -->
<gazebo>
  <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>

    <!-- wheels -->
    <left_joint>left_wheel_joint</left_joint>
    <right_joint>right_wheel_joint</right_joint>

    <!-- kinematics -->
    <wheel_separation>0.142</wheel_separation>
    <wheel_diameter>0.066</wheel_diameter>

    <!-- limits -->
    <max_wheel_torque>80</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>

    <!-- output -->
    <publish_odom>true</publish_odom>
    <publish_odom_tf>true</publish_odom_tf>
    <publish_wheel_tf>true</publish_wheel_tf>

    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_link</robot_base_frame>
  </plugin>
</gazebo>


<!-- Ppub for state_robot_publisher and to rviz -->
<!-- <gazebo>
  <plugin name="gazebo_ros_joint_state_publisher"
          filename="libgazebo_ros_joint_state_publisher.so">
    <update_rate>10</update_rate>
    <joint_names>
      <name>left_wheel_joint</name>
      <name>right_wheel_joint</name>
      <name>base_joint</name>
    </joint_names>
  </plugin>
</gazebo> -->




<gazebo reference="base">
  <material>Gazebo/Orange</material>
</gazebo>

<gazebo reference="left_wheel">
  <material>Gazebo/Black</material>
</gazebo>

<gazebo reference="right_wheel">
  <material>Gazebo/Black</material>
</gazebo>

<gazebo reference="lidar">
  <material>Gazebo/Orange</material>
</gazebo>

<gazebo reference="caster_wheel">
  <material>Gazebo/Yellow</material>
</gazebo>

</robot>
<?xml version = "1.0" ?>
<robot name="diff_robot" xmlns:xacro="http://ros.org/wiki/xacro">

<xacro:property name="body_width" value = "0.44"/>
<xacro:property name="body_length" value = "0.65"/>
<xacro:property name="body_height" value = "0.18"/>

<xacro:property name="wheel_radius" value="0.075"/>
<xacro:property name="wheel_width" value="0.05"/>
<xacro:property name="wheel_r_cas" value="0.02"/>
<xacro:property name="z_off" value="0.08"/>

<!-- Define intertial property macros  -->
<xacro:macro name="box_inertia" params="m w h d">
<inertial>
    <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
    <mass value="${m}"/>
    <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
</inertial>
</xacro:macro>

<xacro:macro name="cylinder_inertia" params="m r h">
<inertial>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
    <mass value="${m}"/>
    <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
</inertial>
</xacro:macro>

<xacro:macro name="sphere_inertia" params="m r">
<inertial>
    <mass value="${m}"/>
    <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
</inertial>
</xacro:macro>

<!-- Robot body -->
<link name="base_link">
    <visual>
        <origin xyz="0 0 ${body_height/2}" rpy="0 0 0"/>
        <geometry>
            <box size="${body_length +0.02} ${body_width+0.02} ${body_height}"/>
        </geometry>
        <material name="Cyan">
            <color rgba="0 1.0 1.0 1.0"/>
        </material>
    </visual>
    <collision>
    <origin xyz="0 0 ${body_height/2}" rpy="0 0 0"/>
        <geometry>
            <box size="${body_length} ${body_width} ${body_height+z_off}"/>
        </geometry>
    </collision>

    <xacro:box_inertia m="20" w="${body_width}" d="${body_length}" h="${body_height}"/>
</link>
<link name="motor_link">
    <visual>
        <geometry>
            <box size="0.17 ${body_width - wheel_width} ${wheel_radius}"/>
        </geometry>
        <material name="black">
            <color rgba="0 0.0 0.0 1.0"/>
        </material>
    </visual>
    <collision>
        <geometry>
            <box size="0.17 ${body_width - wheel_width} ${wheel_radius}"/>
        </geometry>
    </collision>

    <xacro:box_inertia m="10" w="0.17" d="${body_width - wheel_width}" h="${wheel_radius}"/>
</link>

<joint name="motor_joint" type="fixed">
    <parent link = "base_link"/>
    <child link = "motor_link"/>
    <origin xyz = "0 0 -0.03 " rpy = "0 0 0"/>
</joint>    

<!-- Caster Wheel -->
<xacro:macro name="cast_wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
    <visual>
        <geometry>
            <sphere radius="${wheel_r_cas}"/>
        </geometry>
        <material name="white">
            <color rgba="1 1.0 1.0 1.0"/>
        </material>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <sphere radius="${wheel_r_cas}"/>
        </geometry>
    </collision>

    <xacro:sphere_inertia m="1.0" r="${wheel_r_cas}"/>
    </link>

    <joint name="${prefix}_joint" type="fixed">
        <parent link="base_link"/>
        <child link="${prefix}_link"/>
        <origin xyz="${-x_reflect*(body_length/2)} ${y_reflect*(body_width/2)} -${z_off+wheel_radius-wheel_r_cas}" rpy="0 0 0"/>
    </joint>


<link name="${prefix}_tobaselink">
    <visual>
        <geometry>
            <box size="0.03 0.03 ${z_off+wheel_radius}"/>
        </geometry>
        <material name="black">
            <color rgba="0 0.0 0.0 1.0"/>
        </material>
    </visual>
    <collision>
        <geometry>
            <box size="0.03 0.03 ${z_off+wheel_radius}"/>
        </geometry>
    </collision>

    <xacro:box_inertia m="1" w="0.03" d="0.03" h="${z_off+wheel_radius}"/>
</link>
    <joint name="${prefix}_tobasejoint" type="fixed">
        <parent link="base_link"/>
        <child link="${prefix}_tobaselink"/>
        <origin xyz="${-x_reflect*(body_length/2)} ${y_reflect*(body_width/2)} -${(z_off+wheel_radius-wheel_r_cas)/2}" rpy="0 0 0"/>
    </joint>
</xacro:macro>

<xacro:cast_wheel prefix="cast1" x_reflect="1" y_reflect="1"/>
<xacro:cast_wheel prefix="cast2" x_reflect="-1" y_reflect="1"/>
<xacro:cast_wheel prefix="cast3" x_reflect="-1" y_reflect="-1"/>
<xacro:cast_wheel prefix="cast4" x_reflect="1" y_reflect="-1"/>

<!-- Wheels -->
<xacro:macro name="wheel" params="prefix dir y_reflect">
<link name="${prefix}_link">
    <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
    </geometry>
    <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
    </material>
    </visual>
    <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
    </geometry>
    </collision>

    <xacro:cylinder_inertia m="2" r="${wheel_radius}" h="${wheel_width}"/>
</link>

<joint name="${prefix}_joint" type="continuous">
    <parent link="base_link"/>
    <child link="${prefix}_link"/>
    <origin xyz="0 ${y_reflect*(body_width/2)} -${z_off}" rpy="${-pi/2*dir} 0 0"/>
    <axis xyz="0 0 ${dir} "/>
</joint>
</xacro:macro>

<xacro:wheel prefix="leftwheel" dir=" 1" y_reflect="1"/>
<xacro:wheel prefix="rightwheel" dir="-1" y_reflect="-1"/>

  <!-- Lidar link -->
  <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001" ixy="0.000" ixz="0.000"
               iyy="0.001" iyz="0.000" izz="0.001"/>
    </inertial>
    <collision name="lidar_sensor_collision">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </collision>
    <visual name="lidar_sensor_visual">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </visual>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${body_height}" rpy="0 0 0"/>
  </joint> 

</robot>
